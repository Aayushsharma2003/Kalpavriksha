#include <stdio.h>
#include <stdlib.h>

#define MAX_SIZE 100

typedef struct Stack {
    int arr[MAX_SIZE];
    int top;
} Stack;

void initStack(Stack* stack) {
    stack->top = -1;
}

void push(Stack* stack, int element) {
    if (stack->top == MAX_SIZE - 1) {
        printf("Stack overflow! Cannot push %d\n", element);
    } else {
        stack->arr[++(stack->top)] = element;
        printf("%d pushed to stack\n", element);
    }
}

int pop(Stack* stack) {
    if (stack->top == -1) {
        printf("Stack underflow! Cannot pop.\n");
        return -1;
    } else {
        return stack->arr[(stack->top)--];
    }
}

int peek(Stack* stack) {
    if (stack->top == -1) {
        printf("Stack is empty! Cannot peek.\n");
        return -1;
    } else {
        return stack->arr[stack->top];
    }
}

int isEmpty(Stack* stack) {
    return stack->top == -1;
}

int stackSize(Stack* stack) {
    return stack->top + 1;
}

void displayMenu() {
    printf("\n------ Stack Operations ------\n");
    printf("1. Push\n");
    printf("2. Pop\n");
    printf("3. Peek\n");
    printf("4. Is Empty?\n");
    printf("5. Stack Size\n");
    printf("6. Exit\n");
}

int main() {
    Stack stack;
    int choice, element, numOperations;

    initStack(&stack);

    printf("Enter the number of operations to perform: ");
    scanf("%d", &numOperations);

    for (int i = 0; i < numOperations; i++) {
        displayMenu();
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch(choice) {
            case 1:
                printf("Enter element to push: ");
                scanf("%d", &element);
                push(&stack, element);
                break;
            case 2:
                element = pop(&stack);
                if (element != -1)
                    printf("Popped element: %d\n", element);
                break;
            case 3:
                element = peek(&stack);
                if (element != -1)
                    printf("Top element: %d\n", element);
                break;
            case 4:
                if (isEmpty(&stack))
                    printf("Stack is empty.\n");
                else
                    printf("Stack is not empty.\n");
                break;
            case 5:
                printf("Stack size: %d\n", stackSize(&stack));
                break;
            case 6:
                printf("Exiting program.\n");
                return 0;
            default:
                printf("Invalid choice! Please try again.\n");
        }
    }

    return 0;
}
